#summary 简要介绍kindle dx所用的消息队列与任务管理方法

= Introduction =

Kindle DX使用java作为应用软件平台。java平台的主要优势在于平台无关性，但由此也带来了一定缺陷：无论是进程间通信还是进程管理，都没有太好的方法，因此有必要提供一个中间层来处理这些问题。


= Kindle DX的消息队列 =

Kindle DX的java平台通过jni提供了dbus的绑定，_推测_也是通过dbus来与外界通信。但dbus并未广泛使用，而是用了一个名叫lipc的消息系统。（至于dbus是否与lipc相连，目前还不确定）
lipc包括一系列的以lipc开头的程序：

 * lipc-daemon 主守护进程
 * lipc-get-prop
 * lipc-set-prop 读写属性值的程序
 * lipc-send-event
 * lipc-wait-event 发送/接收事件的程序
 * ...

lipc对外采用纯文本接口，格式如下：
{{{
<family name> <property> <value>
<family name> <function> <arg>
<family name> <event>
}}}
因kindle中大量使用shell脚本，这种形式方便脚本调用。

除消息传递外，lipc还提供一些服务，包括：

 * 将/proc中的部分内容映射到lipc
 * 使用脚本处理简单事件
 * 调用pmond实现进程管理

另外一套_疑似_消息传递系统是tphserver。相关代码在内核态和用户态都存在，_推测_是用于传递内核事件。

= Kindle DX的任务管理 =

如前所述，kindle的任务管理主要是通过pmond程序进行的。
pmond监听lipc的消息，并根据需要调用或终止程序（相关配置已事先写在配置文件里）
pmond的主要功能是：

 * 防止内存泄漏
 * 当程序失去响应时重新启动

第二项是通过watchdogd程序作用。当失去响应或内存占用超过设定值时，_推测_通过retryd程序重新启动目标程序。