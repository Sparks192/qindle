#summary 简要介绍kindle dx所用的消息队列与任务管理方法

= Introduction =

Kindle DX使用java作为应用软件平台。java平台的主要优势在于平台无关性，但由此也带来了一定缺陷：无论是进程间通信还是进程管理，都没有太好的方法，因此有必要提供一个中间层来处理这些问题。


= Kindle DX的消息队列 =

Kindle DX的java平台通过jni提供了dbus的绑定。但Kindle系统中包含大量shell脚本和底层程序，不适合直接使用dbus，所以用了一个名叫lipc的消息系统作为包装。
lipc包括一系列的以lipc开头的程序：

 * lipc-daemon 主守护进程
 * lipc-get-prop
 * lipc-set-prop 读写属性值的程序
 * lipc-send-event
 * lipc-wait-event 发送/接收事件的程序
 * 以及核心：liblipc.so

lipc对外采用纯文本接口，格式如下：
{{{
<family name> <property> <value>
<family name> <function> <arg>
<family name> <event>
}}}

完整的属性列表如下：
{{{
com.lab126.pmond
	r 	str	summary
	w	str	restart
	w	str	stop
	w	str	mem_limit
	w	str	start
com.lab126.audio
	rw 	str	logLevel
	w	int	ThreadUp
	w	int	Kill
	rw	int	GstrBufferTime
	r	int	CmdINSinks
	w	int	ResetTTS
	rw	int	GstrLatency
	r	int	CmdIHeadphoneMax
	rw	int	Seek
	rw	int	Volume
	rw	str	URI
	r	int	CmdICurrentMax
	rw	int	Control
	rw	int	Balance
	r	int	CmdISpeakerMax
	rw	int	CmdIVolume
	rw	int	Chapter
	rw	str	logMask
com.lab126.wan
	w 	int	onDemandNudge
	r	int	localTimeOffset
	r	str	logString
	r	str	radioImsi
	w	int	captureLogString
	w	int	factoryTest
	w	int	stopWan
	rw	str	logLevel
	r	str	radioFirmwareVersion
	w	int	stopFactoryTest
	rw	int	onDemand
	r	int	radioInfoIsAvailable
	r	str	radioRealm
	r	int	powerState
	r	int	dataState
	r	int	peer
	r	str	radioCertParam2
	r	int	radioPrlVersion
	w	int	startWan
	r	str	radioCertParam1
	r	str	radioPhoneNumber
	r	int	serviceState
	r	str	radioSerialNumber
	r	int	enoughPower
	rw	str	logMask
com.lab126.tts
	rw 	int	CtrlOpen
	rw	str	logLevel
	r	int	Position
	rw	int	Count
	rw	int	DbgIOutAudio
	rw	int	LimitThreshold
	r	int	State
	rw	int	CtrlSeek
	rw	str	TtsSVoice
	rw	str	DbgSAudioFile
	r	int	DbgILatency
	r	int	DbgIInText
	rw	int	InBufferSize
	rw	str	DbgSTextFile
	rw	int	TextToProcess
	r	int	HeadPosition
	rw	int	CtrlPlay
	rw	int	DbgIUpstreamControl
	r	int	CtrlCurrentBookmark
	w	int	CtrlBookmark
	rw	str	TtsSReduction
	rw	int	TtsICharType
	rw	str	TtsSEncoding
	r	int	DbgIFlags
	rw	int	TtsISpeed
	rw	int	DbgIDownstreamControl
	rw	int	TtsIPitch
	rw	str	TtsSLanguage
	rw	int	DbgIBookmark
	rw	str	logMask
com.lab126.system
	r 	str	waveformversion
	r	str	orientation
	r	str	version
	r	str	usid
	r	str	boardid
	w	str	sendEvent
com.lab126.powerd
	rw 	str	logLevel
	r	int	battLevel
	w	int	wakeUp
	w	int	deferSuspend
	w	int	rtcWakeup
	r	str	state
	w	int	touchScreenSaverTimeout
	rw	int	preventScreenSaver
	rw	str	logMask
	w	int	suspendGrace
	r	str	status
	r	int	isCharging
com.lab126.retryd
com.lab126.framework
	rw 	str	logLevel
	w	int	logContent
	rw	str	logMask
com.lab126.volumd
	rw 	str	logLevel
	r	int	mmcTotalSpace
	r	int	userstoreIsAvailable
	r	int	driveModeState
	r	int	mmcIsAvailable
	r	int	userstoreTotalSpace
	w	int	userstoreReadyToUnMount
	rw	int	useUsbForNetwork
	r	int	mmcFreeSpace
	r	int	userstoreFreeSpace
	rw	str	logMask
}}}
尚无事件的列表。

除消息传递外，lipc还提供一些服务，包括：

 * 将/proc中的部分内容映射到lipc
 * 使用脚本处理简单事件
 * 调用pmond实现进程管理

另外一套_疑似_消息传递系统是tphserver。相关代码在内核态和用户态都存在，_推测_是用于传递内核事件。

= Kindle DX的任务管理 =

如前所述，kindle的任务管理主要是通过pmond程序进行的。
pmond监听lipc的消息，并根据需要调用或终止程序（相关配置已事先写在配置文件里）
pmond的主要功能是：

 * 防止内存泄漏
 * 当程序失去响应时重新启动

第二项是通过watchdogd程序作用。当失去响应或内存占用超过设定值时，_推测_通过retryd程序重新启动目标程序。